name: CI

on:
  workflow_call:
    inputs:
      aws_account_id:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      spryker_project_name:
        required: true
        type: string
      deploy_file_path:
        required: true
        type: string
    secrets:
      composer_auth:
        required: true

jobs:
  build-push-ecr:
      name: "Build and push containers to ECR"
      runs-on: "gha-runner-scale-set"
      env:
          PROGRESS_TYPE: plain
          BUILDKIT_PROGRESS: plain
          # SPRYKER_PLATFORM_IMAGE: spryker/php:8.1
          AWS_ACCOUNT_ID: ${{ inputs.aws_account_id }}
          AWS_REGION: ${{ inputs.aws_region }}
          SPRYKER_PROJECT_NAME: ${{ inputs.spryker_project_name }}
          COMPOSER_AUTH: '{"github-oauth":{"github.com":"${{ secrets.composer_auth }}"}}' # [tl! **]
          SPRYKER_BUILD_STAMP: "$( date '+%F %H:%M:%S' )"
          SPRYKER_BUILD_HASH: ${{ github.sha }}

      steps:
          - uses: actions/checkout@v3

          - name: Install apt-packages
            run: |
                sudo apt-get update
                sudo apt-get install --no-install-recommends -y git pigz iproute2 wget curl
                # wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod a+x /usr/local/bin/yq
                curl -fsSL https://get.docker.com -o get-docker.sh
                sudo sh get-docker.sh
          - name: git clone docker-sdk
            run: |
              git clone --depth 1 https://github.com/spryker/docker-sdk.git -b onsteroidstest ./docker
          - name: Login to AWS
            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-region: ${{ env.AWS_REGION }}
              role-to-assume: arn:aws:iam::880063349454:role/gha-runner-scale-set-irsa@arc-runners2
          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v2
          - name: Run docker-sdk boot and export images-slim
            run: |
              docker -v
              export DOCKER_HOST=unix:///run/docker/docker.sock
              env
              docker/sdk boot ${{ inputs.deploy_file_path }}
              docker/sdk export images-slim -d ecr-slim -t $GITHUB_SHA
